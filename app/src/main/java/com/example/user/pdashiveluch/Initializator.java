package com.example.user.pdashiveluch;

import android.support.annotation.NonNull;

import com.example.user.pdashiveluch.classes.DeviceDescriptor;
import com.example.user.pdashiveluch.classes.PDA_AudioEvent;
import com.example.user.pdashiveluch.classes.PDA_AudioManager;
import com.example.user.pdashiveluch.classes.PDA_BlowoutEvent;
import com.example.user.pdashiveluch.classes.PDA_Event;
import com.example.user.pdashiveluch.classes.PDA_MessageEvent;
import com.example.user.pdashiveluch.classes.Places;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

public class Initializator {

    public static String GetAddress(){
        return "http://kamonline.r41.ru/stalker/get_stalker.php/get.php?nom=";
    }

    //Список действующих группировок
    public static HashMap<Number,Group> Groups(){
        HashMap<Number,Group> groups;
        groups=new HashMap<Number,Group>();
        groups.put(1,new Group(1,"Вольные сталкеры", R.drawable.stalker_image,new Places[]{Places.Bar,Places.Village}));
        groups.put(2,new Group(2,"ДОЛГ",R.drawable.dolg_image,new Places[]{Places.Dolg}));
        groups.put(3,new Group(3,"Бандиты",R.drawable.bandos_image,new Places[]{Places.Bandos}));
        groups.put(4,new Group(4,"Свобода",R.drawable.freedom_image, new Places[]{Places.Freedom}));
        groups.put(5,new Group(5,"Учёные",R.drawable.sci_image,new Places[]{Places.Sci}));
        groups.put(6,new Group(6,"Монолит",R.drawable.monolit_image,new Places[]{Places.Monolit}));
        groups.put(7,new Group(7,"Военные",R.drawable.military_image,new Places[]{Places.Military}));
        groups.put(8,new Group(8,"Наёмники",R.drawable.merc_image,new Places[]{Places.Mercs}));
        groups.put(9,new Group(9,"Чистое небо",R.drawable.cs_image,new Places[]{Places.ClearSky}));
        groups.put(10,new Group(10,"Военный сталкер",R.drawable.mil_st_image,new Places[]{Places.Sci}));
        groups.put(11,new Group(11,"Ренегаты",R.drawable.renegat_image,new Places[]{Places.Renegades}));
        groups.put(12,new Group(12,"Монстры",R.drawable.monster_image,new Places[]{Places.Monolit}));


        return groups;
    }

    public static void FillDeviceDescriptors(){
        new DeviceDescriptor("00:00:00:00:00:00",0,0);
    }

    //Список разрешенных мак адресов
    public static String[] GPSanomalies()
    { String [] positions=
            {
                    "60.6817087,29.1705734,30,3",
                    "60.6811492,29.1705358,30,3",
                    "60.6806423,29.1697526,30,3",
                    "60.6806475,29.1686958,30,3",
                    "60.6791817,29.1686636,100,3",
                    "60.677192,29.166768,130,3",
                    "60.677010,29.162948,100,3",
                    "60.678468,29.161885,100,3",
                    "60.679225,29.163218,80,3",
                    "60.680254,29.164225,110,3",
                    "60.680357,29.158281,180,3",
                    "60.684884,29.163827,450,4",
                    "60.677628,29.156320,180,4",
                    "60.675141,29.169665,110,3",
                    "60.676134,29.171300,65,3",
                    "60.676777,29.172840,75,3",
                    "60.677771,29.174766,75,3",
                    "60.673835,29.172770,105,2",
                    "60.669073,29.166400,325,2",
                    "60.669998,29.175214,150,2",
                    "60.666807,29.176297,160,2",
                    "60.665237,29.178813,125,2",
                    "60.664933,29.175016,60,2",
                    "60.014735,30.240970,110,3",
                    "60.013398,30.242682,110,3",
                    "60.014312,30.238784,60,3",
                    "60.012823,30.239583,20,3"


            };
        return positions;
    }

    public static String[] BT_Macs(){
        String[] bt_base=
        {
                "00:00:00:00:00:00",
                "01:05:01:00:00:00",
                "01:03:06:00:00:00",
                "06:03:06:00:00:00",
                "00:15:83:F0:0D:74",
                "00:15:83:F0:0E:23",
                "00:15:83:F0:0F:A0",
                "00:15:83:F0:10:DC",
                "00:15:83:F0:12:39",
                "00:15:83:F0:13:18",
                "00:15:83:F0:14:98",
                "0C:B2:B7:0F:24:45",
                "40:BD:32:86:D7:CC",
                "40:BD:32:A6:68:C7",
                "44:EA:D8:FE:A3:D3",
                "50:33:8B:10:08:D9",
                "50:33:8B:23:12:90",
                "50:8C:B1:47:97:18",
                "50:8C:B1:48:4E:B8",
                "50:8C:B1:86:04:DF",
                "50:F1:4A:46:67:2D",
                "50:F1:4A:AB:D4:49",
                "50:F1:4A:BD:56:6E",
                "54:4A:16:6F:A9:3C",
                "58:7A:62:57:E3:65",
                "64:CF:D9:08:E6:90",
                "7C:01:0A:45:9B:56",
                "88:25:83:F0:1E:B6",
                "88:25:83:F0:1E:BD",
                "88:25:83:F0:1E:C5",
                "88:25:83:F0:21:9E",
                "88:25:83:F0:21:F6",
                "88:25:83:F0:25:6F",
                "88:25:83:F0:25:7B",
                "88:25:83:F0:25:DA",
                "88:25:83:F0:26:25",
                "88:25:83:F0:26:5B",
                "88:25:83:F0:26:67",
                "88:25:83:F0:27:21",
                "88:25:83:F0:27:D4",
                "88:25:83:F0:28:40",
                "88:25:83:F0:28:73",
                "88:25:83:F0:28:8D",
                "88:25:83:F0:28:AA",
                "88:25:83:F0:29:34",
                "88:25:83:F0:29:D8",
                "88:25:83:F0:2B:6B",
                "88:25:83:F0:2B:BD",
                "88:25:83:F0:2C:04",
                "88:25:83:F0:2C:A3",
                "88:25:83:F0:2D:31",
                "88:25:83:F0:2E:16",
                "88:25:83:F0:30:50",
                "88:25:83:F0:30:91",
                "88:25:83:F0:31:66",
                "88:25:83:F0:31:83",
                "88:25:83:F0:32:96",
                "88:25:83:F0:32:E7",
                "88:25:83:F0:32:ED",
                "88:25:83:F0:33:5C",
                "88:25:83:F0:33:E3",
                "88:25:83:F0:A8:9B",
                "88:25:83:F0:A8:B3",
                "88:25:83:F0:A9:86",
                "88:25:83:F0:AE:F4",
                "88:25:83:F0:AF:A6",
                "88:25:83:F0:B0:BE",
                "88:25:83:F0:B1:A3",
                "88:25:83:F0:B1:AE",
                "88:25:83:F0:B1:EB",
                "88:25:83:F0:B6:BD",
                "9C:1D:58:18:46:E5",
                "A1:5A:02:03:98:B4",
                "A1:5A:02:03:9A:3F",
                "A1:5A:02:03:9B:50",
                "A1:5A:02:02:12:AE",
                "A1:5A:02:02:15:3B",
                "A1:5A:02:02:15:A5",
                "A1:5A:02:03:96:FD",
                "A1:5A:02:03:98:5C",
                "A1:5A:02:03:9A:02",
                "C8:FD:19:90:2C:2C",
                "C8:FD:19:91:68:7E",
                "C8:FD:19:94:5A:68",
                "C8:FD:19:94:A8:9F",
                "C8:FD:19:A0:56:3D",
                "D4:36:39:6C:AE:47",
                "A1:5A:02:02:15:B2",
                "C8:FD:19:94:A8:9F",
                "88:25:83:F0:25:DA",
                "7C:01:0A:45:9B:56",
                "88:25:83:F0:B1:EB",
                "88:25:83:F0:A8:9B",
                "00:15:83:F0:0F:A0",
                "88:25:83:F0:B6:BD",
                "88:25:83:F0:AF:A6",
                "00:15:83:F0:12:39",
                "88:25:83:F0:A9:86",
                "A1:5A:02:03:9B:50",
                "00:15:83:F0:14:98",
                "A1:5A:02:03:9A:3F",
                "00:15:83:F0:13:18",
                "00:15:83:F0:0E:23",
                "A1:5A:02:03:98:B4",
                "88:25:83:F0:A8:B3",
                "88:25:83:F0:B0:BE",
                "88:25:83:F0:29:34",
                "88:25:83:F0:2C:A3",
                "54:4A:16:6F:A9:3C",
                "50:8C:B1:47:97:18",
                "88:25:83:F0:26:25",
                "40:BD:32:86:D7:CC",
                "94:49:18:04:03:75",
                "88:25:83:F0:30:50",
                "C8:FD:19:94:5A:68",
                "A1:5A:02:02:15:A5",
                "A1:5A:02:02:12:AE",
                "88:25:83:F0:2D:31",
                "A1:5A:02:03:9A:02",
                "A1:5A:02:03:98:5C",
                "50:F1:4A:46:67:2D",
                "88:25:83:F0:1E:C5",
                "88:25:83:F0:25:6F",
                "88:25:83:F0:26:5B",
                "50:8C:B1:48:4E:B8",
                "88:25:83:F0:25:7B",
                "88:25:83:F0:B1:AE",
                "88:25:83:F0:28:AA",
                "A1:5A:02:02:15:3B",
                "64:CF:D9:08:E6:90",
                "88:25:83:F0:30:91",
                "50:33:8B:23:12:90",
                "88:25:83:F0:27:D4",
                "50:8C:B1:86:04:DF",
                "88:25:83:F0:1E:BD",
                "88:25:83:F0:26:67",
                "44:EA:D8:FE:A3:D3",
                "9C:1D:58:18:46:E5",
                "C8:FD:19:90:2C:2C",
                "88:25:83:F0:33:5C",
                "88:25:83:F0:AE:F4",
                "A1:5A:02:03:96:FD",
                "88:25:83:F0:1E:B6",
                "00:15:83:F0:10:DC",
                "88:25:83:F0:32:E7",
                "58:7A:62:57:E3:65",
                "00:15:83:F0:0D:74",
                "88:25:83:F0:B1:A3",
                "88:25:83:F0:31:66",
                "50:F1:4A:AB:D4:49",
                "88:25:83:F0:33:E3",
                "88:25:83:F0:28:8D",
                "88:25:83:F0:21:F6",
                "88:25:83:F0:2E:16",
                "88:25:83:F0:28:40",
                "0C:B2:B7:0F:24:45",
                "88:25:83:F0:2B:6B",
                "40:BD:32:A6:68:C7",
                "88:25:83:F0:28:73",
                "88:25:83:F0:21:9E",
                "50:33:8B:10:08:D9",
                "88:25:83:F0:27:21",
                "88:25:83:F0:32:ED",
                "88:25:83:F0:29:D8",
                "88:25:83:F0:32:96",
                "88:25:83:F0:2B:BD",
                "88:25:83:F0:2C:04",
                "D4:36:39:6C:AE:47",
                "88:25:83:F0:31:83",
                "C8:FD:19:A0:56:3D",
                "50:F1:4A:BD:56:6E",
                "C8:FD:19:91:68:7E",
                "88:25:83:F0:27:36",
                "88:25:83:F0:30:26",
                "88:25:83:F0:25:B4",
                "D4:36:39:C1:A5:3A",
                "C8:FD:19:71:04:B1",
                "64:CF:D9:2B:2D:DB",
                "88:25:83:F0:29:C3",
                "88:25:83:F0:25:FF",
                "D4:36:39:8C:2F:10",
                "88:25:83:F0:22:75",
                "88:25:83:F0:29:8E",
                "88:25:83:F0:31:B0",
                "88:25:83:F0:26:36",
                "88:25:83:F0:2C:5C",
                "44:EA:D8:F3:A9:EE",
                "88:25:83:F0:27:F6",
                "C8:FD:19:71:C8:36",
                "50:33:8B:10:00:FC",
                "D4:36:39:A1:72:DF",
                "18:93:D7:4A:5F:BC",
                "88:25:83:F0:22:3B",
                "10:CE:A9:24:EE:49",
                "AB:53:86:34:39:19",
                "88:25:83:F0:20:1A",
                "44:EA:D8:F3:A9:F7",
                "50:F1:4A:51:17:0B",
                "88:25:83:F0:25:5E",
                "64:CF:D9:07:C7:CC",
                "88:25:83:F0:34:38",
                "C8:FD:19:8A:7E:70",
                "88:25:83:F0:2A:70",
                "88:25:83:F0:24:16",
                "88:25:83:F0:30:04",
                "64:CF:D9:2B:37:07",
                "88:25:83:F0:2E:4C",
                "88:25:83:F0:20:2C",
                "88:25:83:F0:29:22",
                "88:25:83:F0:31:1B",
                "88:25:83:F0:21:93",
                "88:25:83:F0:30:7C",
                "88:25:83:F0:1F:D8"




        };
        return bt_base;
    }

    public static boolean isCorrectMAC(String mac){
        String[] bt_base;
        bt_base=Initializator.BT_Macs();
        boolean bt_ready = false;
        if(mac.endsWith(":00:00:00:00") )
            bt_ready=true;
        if(!bt_ready)
            for (int b = 0; b < bt_base.length; b++) {
                if (mac.equals(bt_base[b])) {
                    bt_ready = true;
                    break; //зачем в пустую гонять до конца если мы уже нашли
                }
            }

        return bt_ready;
    }

    //действующий коэффициент формул аномалий
    public static float GetKFF(){
        return 51;
    }

    //не переопределяется - текущее время в виде строки
    public static String GetCurrentDF(){
        DateFormat df=new SimpleDateFormat("HH:mm");;
        String date = df.format(Calendar.getInstance().getTime());
        return date;
    }

    //флаг разрешения любых мак адресов
    public static boolean AllowAllMAC(){
        return false;
    }

    //время в миллисекундах по истечению которого игрок умрет, если не будет обновления состояния сервиса
    public static float GetMaxTimeBeforeDie(){
        return 5000;
    }

    public static  float GetTimeBeforeResetPlace(){
        return 3000;
    }

    //размер получаемого лечения на базах
    public static float ValueHealingOnBase(){
        return 300;
    }

    //ищем не более Х устройств для ускорения поиска
    public static int DiscoveryCountLimit(){
        return 1;
    }

    //время Х простоя с крайнего поиска
    public static float DiscoveryTimeLimit(){
        return 10;
    }

    public static String[] GetQRCodes(){
        String[] allcodes =
                {
                        /*"11279",//0 Кожаная куртка
                        "11597",//1 Заря
                        "12069",//2 Сева
                        "12252",//3 Экзоскелет
                        "12515",//4 Бандитская куртка
                        "14130",//5 Кожаный плащ
                        "15057",//6 Армейский бронежилет
                        "15066",//7 Булат
                        "15637",//8 Берилл
                        "17804",//9 Комбинезон Долга (ПС3-9д)
                        "18790",//10 Броня Долга (ПС3-9Мд)
                        "18908",//11 Экза Долга
                        "22889",//12 Страж Свободы
                        "23197",//13 Ветер Свободы
                        "26708",//14 Экза Свободы
                        "27613",//15 Комбинезон Монолита
                        "28088",//16 Броня Монолита
                        "28936",//17 Экза Монолита
                        "30611",//18 Комбинезон Наёмников
                        "30694",//19 Броня Наёмников
                        "33512",//20 Комбинезон ЧН-1
                        "33554",//21 Броня ЧН-2
                        "36768",//22 Бронекостюм ЧН-3а
                        "36849",//23 Халат Ученых
                        "37850",//24 Эколог (ССП-99)
                        "39875",//25 ССП-99М
                        "42542",//26 Костюм «Монстр»
                        "43685",//27 Костюм «Игротех»
                        "46626",//28 Костюм «Болотный Доктор»
                        "48490",//29 Батарейка
                        "48760",//30 Кристалл
                        "49191",//31 Пустышка
                        "50863",//32 Золотая Рыбка
                        "55303",//33 Каменный Цветок
                        "55326",//34 Пси-шлем
                        "58177",//35 Антирад
                        "59558",//36 Аптечка
                        "60594",//37 Военная аптечка
                        "63495",//38 Научная аптечка
                        "66356",//39 Респиратор
                        "68301",//40 Противогаз
                        "69259",//41 Система замкнутого дыхания
                        "69345",//42 Тайная тропа ЧН
                        "71687",//43 Конец тайной тропы ЧН
                        "72105",//44 Наркозависимость
                        "73340",//45 Доза
                        "73946",//46 Лечение от наркозависимости
                        "74401",//47 Неизвестная болезнь
                        "74435",//48 Иммунитет к неизвестной болезни болезни
                        "76066",//49 Лечение неизвестной болезни
                        "77579",//50 Отравление
                        "78755",//51 Отвар Болотного Доктора
                        "79078",//52 10 опыта
                        "79261",//53 25 опыта
                        "81357",//54 50 опыта
                        "81928",//55 Ремонт
                        "82044",//56 оживление
                        "83164",// 57   +5 защита от радиации Слетает
                        "84260",// 58   -5 защита от радиации Слетает
                        "84567",// 59   +5 защита от хим Слетает
                        "85898",// 60   -5 защита от хим Слетает
                        "89079",// 61   +5 защита от пси Слетает
                        "91544",// 62   -5 защита от пси Слетает
                        "91876",// 63   +5 защита от грави Слетает
                        "93887",// 64   -5 защита от грави Слетает
                        "96843",// 65   +5 защита огонь Слетает
                        "98753",// 66   -5 защита огонь Слетает
                        "99084",// 67   +5 защита от электро слетает
                        "99144",// 68   -5 защита от электро слетает
                        "99637"// 69 ремкомплект*/
//                        "86001",//0 Кожаная куртка
//                        "86002",//1 Заря
//                        "86003",//2 Сева
//                        "86004",//3 Экзоскелет
//                        "860050",//4 Бандитская куртка
//                        "860060",//5 Кожаный плащ
//                        "860070",//6 Армейский бронежилет
//                        "860080",//7 Булат
//                        "860090",//8 Берилл
//                        "860100",//9 Комбинезон Долга (ПС3-9д)
//                        "860110",//10 Броня Долга (ПС3-9Мд)
//                        "860120",//11 Экза Долга
//                        "860130",//12 Страж Свободы
//                        "860140",//13 Ветер Свободы
//                        "860150",//14 Экза Свободы
//                        "860160",//15 Комбинезон Монолита
//                        "860170",//16 Броня Монолита
//                        "860180",//17 Экза Монолита
//                        "860190",//18 Комбинезон Наёмников
//                        "860200",//19 Броня Наёмников
//                        "860210",//20 Комбинезон ЧН-1
//                        "860220",//21 Броня ЧН-2
//                        "860230",//22 Бронекостюм ЧН-3а
//                        "860240",//23 Халат Ученых
//                        "860250",//24 Эколог (ССП-99)
//                        "860260",//25 ССП-99М
//                        "860270",//26 Костюм «Монстр»
//                        "860280",//27 Костюм «Игротех»
//                        "860290",//28 Костюм «Болотный Доктор»
//                        "86100",//29 Батарейка
//                        "86101",//30 Кристалл
//                        "86102",//31 Пустышка
//                        "86103",//32 Золотая Рыбка
//                        "86104",//33 Каменный Цветок
//                        "86200",//34 Пси-шлем
//                        "86201",//35 Антирад
//                        "86202",//36 Аптечка
//                        "86203",//37 Военная аптечка
//                        "86204",//38 Научная аптечка
//                        "86205",//39 Респиратор
//                        "86206",//40 Противогаз
//                        "86207",//41 Система замкнутого дыхания
//                        "86208",//42 Тайная тропа ЧН
//                        "86209",//43 Конец тайной тропы ЧН
//                        "86210",//44 Наркозависимость
//                        "86211",//45 Доза
//                        "86212",//46 Лечение от наркозависимости
//                        "86213",//47 Неизвестная болезнь
//                        "86214",//48 Иммунитет к неизвестной болезни болезни
//                        "86215",//49 Лечение неизвестной болезни
//                        "86216",//50 Отравление
//                        "86217",//51 Отвар Болотного Доктора
//                        "86400",//52 10 опыта
//                        "86401",//53 25 опыта
//                        "86402",//54 50 опыта
//                        "86403",//55 Ремонт
//                        "86666",//56 оживление
//                        "86500",// 57   +5 защита от радиации Слетает
//                        "86501",// 58   -5 защита от радиации Слетает
//                        "86502",// 59   +5 защита от хим Слетает
//                        "86503",// 60   -5 защита от хим Слетает
//                        "86504",// 61   +5 защита от пси Слетает
//                        "86505",// 62   -5 защита от пси Слетает
//                        "86506",// 63   +5 защита от грави Слетает
//                        "86507",// 64   -5 защита от грави Слетает
//                        "86508",// 65   +5 защита огонь Слетает
//                        "86509",// 66   -5 защита огонь Слетает
//                        "86510",// 67   +5 защита от электро слетает
//                        "86511",// 68   -5 защита от электро слетает
//                        "86520",// 69 ремкомплект
//                        "88320"//70 неизвестная болезнь


                        "88001",//0 Кожаная куртка
                        "88002",//1 Заря
                        "88003",//2 Сева
                        "88004",//3 Экзоскелет
                        "88005",//4 Бандитская куртка
                        "88006",//5 Кожаный плащ
                        "88007",//6 Армейский бронежилет
                        "88008",//7 Булат
                        "88009",//8 Берилл
                        "88010",//9 Комбинезон Долга (ПС3-9д)
                        "88011",//10 Броня Долга (ПС3-9Мд)
                        "88012",//11 Экза Долга
                        "88013",//12 Страж Свободы
                        "88014",//13 Ветер Свободы
                        "88015",//14 Экза Свободы
                        "88016",//15 Комбинезон Монолита
                        "88017",//16 Броня Монолита
                        "88018",//17 Экза Монолита
                        "88019",//18 Комбинезон Наёмников
                        "88020",//19 Броня Наёмников
                        "88021",//20 Комбинезон ЧН-1
                        "88022",//21 Броня ЧН-2
                        "88023",//22 Бронекостюм ЧН-3а
                        "88024",//23 Халат Ученых
                        "88025",//24 Эколог (ССП-99)
                        "88026",//25 ССП-99М
                        "88027",//26 Костюм «Монстр»
                        "88028",//27 Костюм «Игротех»
                        "88029",//28 Костюм «Болотный Доктор»
                        "88100",//29 Батарейка
                        "88101",//30 Кристалл
                        "88102",//31 Пустышка
                        "88103",//32 Золотая Рыбка
                        "88104",//33 Каменный Цветок
                        "88200",//34 Пси-шлем
                        "88201",//35 Антирад
                        "88202",//36 Аптечка
                        "88203",//37 Военная аптечка
                        "88204",//38 Научная аптечка
                        "88205",//39 Респиратор
                        "88206",//40 Противогаз
                        "88207",//41 Система замкнутого дыхания
                        "88208",//42 Тайная тропа ЧН
                        "88209",//43 Конец тайной тропы ЧН
                        "88210",//44 Наркозависимость
                        "88211",//45 Доза
                        "88212",//46 Лечение от наркозависимости
                        "88213",//47 Неизвестная болезнь
                        "88214",//48 Иммунитет к неизвестной болезни болезни
                        "88215",//49 Лечение неизвестной болезни
                        "88300",//50 Отравление
                        "88301",//51 Отвар Болотного Доктора
                        "88302",//52 10 опыта
                        "88303",//53 25 опыта
                        "88304",//54 50 опыта
                        "88305",//55 Ремонт
                        "88306",//56 оживление
                        "88307",// 57   +5 защита от радиации Слетает
                        "88308",// 58   -5 защита от радиации Слетает
                        "88309",// 59   +5 защита от хим Слетает
                        "88310",// 60   -5 защита от хим Слетает
                        "88311",// 61   +5 защита от пси Слетает
                        "88312",// 62   -5 защита от пси Слетает
                        "88313",// 63   +5 защита от грави Слетает
                        "88314",// 64   -5 защита от грави Слетает
                        "88315",// 65   +5 защита огонь Слетает
                        "88316",// 66   -5 защита огонь Слетает
                        "88317",// 67   +5 защита от электро слетает
                        "88318",// 68   -5 защита от электро слетает
                        "88319",// 69 ремкомплект
                        "88320",//70 неизвестная болезнь
                        "88321",//71 болты
                        "88322",//72 прорыв сталкеров
                        "88323",//73 адепт
                        "88324",//74 не адепт
                        "88325"//75 Hunter

                };
        return allcodes;
    }

    public static boolean HideNotification(){
        return false;
    }

    public static final int NOTIFY_ID = 101;
    public final static String CHANNEL_ID = "Shiveluch PDA channel";

    public final static PDA_Event[] GetEventsList(){
        PDA_Event[] events=new PDA_Event[]{
                new PDA_AudioEvent("11.04.2021 14:45:00", "11.04.2021 14:45:01", PDA_AudioManager.AppSounds.VIBR),
                new PDA_AudioEvent("11.04.2021 14:59:58", "11.04.2021 13:59:59", PDA_AudioManager.AppSounds.BEFV),
                new PDA_BlowoutEvent("11.04.2021 15:00:00", "11.04.2021 15:30:00", new Places[]{Places.Bandos,Places.Bar,Places.Doctor,Places.Dolg,Places.Freedom,Places.Mercs,Places.Monolit,Places.Sci, Places.Shelter, Places.ClearSky}),
                new PDA_AudioEvent("11.04.2021 15:30:01", "11.04.2021 15:30:02", PDA_AudioManager.AppSounds.EOVIBR)
        };

        //Здесь будет город сад
        //согласно пророчеству
        return events;
    }

    public final static long GetBlowoutAlarmTime(){ //ms
        return 60000;
    }

    public final static float GetBlowoutPsiDamage(){
        return 1;
    }

    public final static String GetBeaconNameSeparator(){
        return "+";
    }
    //test
}
